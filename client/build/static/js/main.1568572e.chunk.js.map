{"version":3,"sources":["images/Traveller.svg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/NavbarElements.js","components/layout/NavIndex.js","components/layout/Home.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Nav","styled","nav","_templateObject","NavLink","Link","_templateObject2","Bars","FaBars","_templateObject3","NavMenu","div","_templateObject4","NavBtnLink","_templateObject5","_templateObject6","Navbar","react_default","a","createElement","Fragment","NavbarElements_NavLink","to","activeStyle","Home","style","height","className","id","class","placeholder","styles","src","alt","Component","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","width","borderRadius","letterSpacing","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Dashboard","onLogoutClick","split","fontFamily","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","es","BrowserRouter","NavIndex","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1568572e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Traveller.64555b81.svg\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"https://mern-easyrent-backend-working.herokuapp.com/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"https://mern-easyrent-backend-working.herokuapp.com/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  z-index: 10;\r\n\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: #15cdfc;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n\r\n  margin-right: 24px; \r\n\r\n \r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n   @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 8px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavLink to='/'>\r\n          {/*<img src={require('../../images/logo.svg')} alt='logo' />*/}\r\n        </NavLink>\r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to='/about' activeStyle>\r\n            About\r\n          </NavLink>\r\n          <NavLink to='/services' activeStyle>\r\n            Services\r\n          </NavLink>\r\n          <NavLink to='/contact-us' activeStyle>\r\n            Contact Us\r\n          </NavLink>\r\n          <NavLink to='/register' activeStyle>\r\n            Sign Up\r\n          </NavLink>\r\n          <NavBtnLink to='/login'>Sign In</NavBtnLink>\r\n        </NavMenu>\r\n        \r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return ( \r\n        <div style={{ height: \"75vh\" }} className=\"container\">\r\n          <div className=\"d-sm-flex align-items-center justify-content-between\">\r\n            <div>\r\n              <h1>\r\n              EASE YOUR <span className=\"text-warning\">RENTAL </span> SEARCH\r\n              </h1>\r\n              <p className=\"lead my-4\">\r\n                  Renting in Singapore can be a long process but we aim to \r\n                  make it easy and transparent for you. Other than helping \r\n                  you to find your ideal home, we provide end-to-end services to manage it. \r\n              </p>\r\n              <br />\r\n              <div className=\"search\">\r\n                <i className=\"fa fa-search\"></i>\r\n                <input id = \"SearchInput\" type=\"text\" class=\"form-control\" placeholder=\"Search for a MRT, project, area\"/>\r\n                <button id = \"SearchButton\" class=\"btn btn-primary\">Search</button> {/*<!--Consider Getting rid of button and having on enter-->*/}\r\n              </div>\r\n              <img \r\n              styles={{ height: 50 }}\r\n      src={require('../../images/Traveller.svg')} alt='logo' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n         \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Welcome</b> to {\" \"}\n              <span style={{ fontFamily: \"monospace\" }}>EasyRent</span> registration page\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              This is a prototype and not representative of the final product\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    \n\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"landing-copy col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a full-stack{\" \"}\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\n              </p>\n              <p>This is a space for the tiles to come in</p>\n            </h4>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport NavIndex from \"./components/layout/NavIndex\";\nimport Home from \"./components/layout/Home\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <NavIndex />\n            {/*<Route exact path=\"/\" component={Landing} />*/}\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}